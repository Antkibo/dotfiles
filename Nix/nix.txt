[Nix]

1. Nix is a purely functional package manager. It treats packages like values in functional languages like Haskell - they are built by functions that don't have side effects, and they never change after they have been built.

2. Nix stores packages in the Nix store, usually the directory /nix/store, where each package has its own unique subdirectory such as

	/nix/store/b6gvzjyb2pg0kjfwrjmg1vfhh54ad73z-firefox-33.1/

where b6gvz... is a unique identifier for the package that captures all its dependencies (it's a cryptographic hash of the package's build dependency graph).

3. You can have multiple versions or variants of a package installed at the same time. This is specially important when different programs have dependencies on different versions of the same package. Because of the hashing scheme, different versions of the same package end in different places in the Nix store, so they don't interfere with each other.

4. As such, operations like upgrading or uninstalling cannot break other applications, since these operations never "destructively" update or delete files that are used by other packages.

5. Nix helps you make sure that package dependency specifications are complete because build operations don't look for dependencies on /usr/bin or other common paths. If a package builds correctly on your system is because you specified all dependencies explicitly.

6. Once a package is built, runtime dependencies are found by scanning the binaries for the hash parts of Nix store paths.

7. Nix has multi-user support: non-privileged users can securely install software.

8. Package management operations in Nix are atomic.

[Basic package management]

1. nix-env is the main command for package management.

2. User environments are directory trees consisting of symlinks to the files of active applications. 

3. Channels are collections of nix expressions to build packages and their dependencies.

4. Nix main channel is the Nixpkgs channel.

5. You can add new channels with
	
	nix-channel --add <channel-name>

6. You can update channels with

	nix-channel --update




